services:
  file-ingest:
    container_name: maple2-file-ingest
    image: mcr.microsoft.com/dotnet/sdk:8.0
    working_dir: /app/Maple2.File.Ingest
    entrypoint: ["dotnet", "run"]
    depends_on:
      - mysql
    links:
      - mysql
    env_file:
      - .env
    environment:
      DB_IP: mysql
      MS2_DATA_FOLDER: /ClientData
    volumes:
      - .:/app
      - ${MS2_DOCKER_DATA_FOLDER}:/ClientData
      - dotnet_tools:/root/.dotnet/tools

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    container_name: maple2-db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  web:
    build:
      context: .
      dockerfile: ./Maple2.Server.Web/Dockerfile
    container_name: maple2-web
    image: maple2/web
    depends_on:
      - mysql
    # no .env file mounted; use env_file + overrides
    ports:
      - 80:80
      - 443:443
      - 4000:4000
    env_file:
      - .env
    environment:
      DB_IP: mysql

  world:
    build:
      context: .
      dockerfile: ./Maple2.Server.World/Dockerfile
    container_name: maple2-world
    image: maple2/world
    command: dotnet Maple2.Server.World.dll
    depends_on:
      mysql:
        condition: service_healthy
    # no .env file mounted; use env_file + overrides
    ports:
      - 21001:21001
    env_file:
      - .env
    environment:
      DB_IP: mysql
      GRPC_LOGIN_IP: login
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      # simple TCP check on gRPC port (HTTP/2 only)
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/21001' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 5s

  login:
    build:
      context: .
      dockerfile: ./Maple2.Server.Login/Dockerfile
    container_name: maple2-login
    image: maple2/login
    command: dotnet Maple2.Server.Login.dll
    depends_on:
      mysql:
        condition: service_healthy
      world:
        condition: service_healthy
    # no .env file mounted; use env_file + overrides
    ports:
      - 20001:20001
    links:
      - world
    env_file:
      - .env
    environment:
      DB_IP: mysql
      GRPC_WORLD_IP: world
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/21000' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s

  game-ch0:
    build:
      context: .
      dockerfile: ./Maple2.Server.Game/Dockerfile
    image: maple2/game
    depends_on:
      mysql:
        condition: service_healthy
      world:
        condition: service_healthy
    # no .env file mounted; use env_file + overrides
    ports:
      - 20002:20002
      - 21002:21002
    env_file:
      - .env
    environment:
      DB_IP: mysql
      INSTANCED_CONTENT: true
      GRPC_WORLD_IP: world
      GRPC_GAME_IP: game-ch0
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      # gRPC channel port for ch0 is 21002
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/21002' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s

  game-ch1:
    build:
      context: .
      dockerfile: ./Maple2.Server.Game/Dockerfile
    image: maple2/game
    depends_on:
      mysql:
        condition: service_healthy
      world:
        condition: service_healthy
    # no .env file mounted; use env_file + overrides
    ports:
      - 20003:20003
      - 21003:21003
    env_file:
      - .env
    environment:
      DB_IP: mysql
      GRPC_WORLD_IP: world
      GRPC_GAME_IP: game-ch1
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      # gRPC channel port for ch1 is 21003
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/21003' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s

volumes:
  dotnet_tools:
  mysql:
